#!/bin/bash

apt_deps=(emacs tmux vim)
pip_deps=(paramiko robotframework boto)

check_deps() {
    ret=0

    # Check apt packages
    missing=($(comm -23 <(for i in "${apt_deps[@]}"; do echo $i; done|sort) <(dpkg -l| awk '/^i/{print $2}'|sort)))
    if [ -n $missing ]; then
        echo "Missing apt packages:" "${[missing[@]}"
        ret=1
    fi

    # Check pip packages
    missing=($(comm -23 <(for i in "${pip_deps[@]}"; do echo $i; done|sort) <(pip list| awk '{print $1}'|sort)))
    if [ -n $missing ]; then
        echo "Missing pip packages:" "${[missing[@]}"
        ret=1
    fi

    # TODO: always install our own pip modules. This because it will
    # reinstall them, and we want any changes made in the repository

    return $ret
}

# Word of warning: This goes online to check the latest package
# versions. That can be slow, and should not be used in build scripts
check_outdated() {
    ret=0

    # Check pip packages
   outdated=($(comm -12 <(for i in "${pip_deps[@]}"; do echo $i; done|sort) <(pip list -o| awk '{print $1}'|sort)))
    if [ -n $outdated ]; then
        echo "Outdated pip packages:" "${[outdated[@]}"
        ret=1
    fi

    return $ret
}

install_deps() {
    # TODO: add any missing PPAs

    # Install apt packages
    echo sudo apt-get update
    echo sudo apt-get upgrade
    echo sudo apt-get install "${apt_deps[@]}"

    # Install pip packages
    echo sudo pip install -U -q "${pip_deps[@]}")
}

if [ "$#" -ne 1 ]; then
    echo "Illegal number of parameters"
    exit 1
fi

# Check that we have pip installed
if ! pip >/dev/null 2>&1; then
    echo "Python installer pip is missing."
    echo "https://pip.pypa.io/en/stable/installing/"
    exit 1
fi

case "$1" in
    check)
        check_deps
        ;;
    outdated)
        check_outdated
        ;;
    install)
        install_deps
        ;;
    *)
        echo "Unknown parameter '$1'. Use 'check', 'outdated' or 'install'"
esac
